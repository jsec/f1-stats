generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://jsec@localhost/f1stats_relations"
}

model Circuits {
  id        Int      @id
  ref       String?
  name      String?
  city      String?
  country   String?
  latitude  Float?
  longitude Float?
  alt       String?
  url       String?
  createdAt DateTime
  updatedAt DateTime
}

model ConstructorResults {
  id            Int           @id
  raceId        Int?
  constructorId Int?
  points        Int?
  statusId      Int?
  createdAt     DateTime
  updatedAt     DateTime
  Constructors  Constructors? @relation(fields: [constructorId], references: [id])
  Races         Races?        @relation(fields: [raceId], references: [id])
  Statuses      Statuses?     @relation(fields: [statusId], references: [id])
}

model ConstructorStandings {
  id            Int           @id
  raceId        Int?
  constructorId Int?
  points        Int?
  position      Int?
  positionText  String?
  wins          Int?
  createdAt     DateTime
  updatedAt     DateTime
  Constructors  Constructors? @relation(fields: [constructorId], references: [id])
  Races         Races?        @relation(fields: [raceId], references: [id])
}

model Constructors {
  id                   Int                    @id
  ref                  String?
  name                 String?
  nationality          String?
  url                  String?
  createdAt            DateTime
  updatedAt            DateTime
  ConstructorResults   ConstructorResults[]
  ConstructorStandings ConstructorStandings[]
  DriverStandings      DriverStandings[]
  Qualifications       Qualifications[]
  RaceResults          RaceResults[]
}

model DriverStandings {
  id            Int           @id
  raceId        Int?
  driverId      Int?
  constructorId Int?
  points        Int?
  position      Int?
  positionText  String?
  wins          Int?
  createdAt     DateTime
  updatedAt     DateTime
  Constructors  Constructors? @relation(fields: [constructorId], references: [id])
  Drivers       Drivers?      @relation(fields: [driverId], references: [id])
  Races         Races?        @relation(fields: [raceId], references: [id])
}

model Drivers {
  id              Int               @id
  ref             String?
  number          Int?
  code            String?
  firstName       String?
  lastName        String?
  dob             DateTime?
  nationality     String?
  url             String?
  createdAt       DateTime
  updatedAt       DateTime
  DriverStandings DriverStandings[]
  LapTimes        LapTimes[]
  PitStops        PitStops[]
  Qualifications  Qualifications[]
  RaceResults     RaceResults[]
}

model LapTimes {
  id           Int       @id
  raceId       Int?
  driverId     Int?
  lap          Int?
  position     Int?
  time         DateTime?
  milliseconds Int?
  createdAt    DateTime
  updatedAt    DateTime
  Drivers      Drivers?  @relation(fields: [driverId], references: [id])
  Races        Races?    @relation(fields: [raceId], references: [id])
}

model PitStops {
  id           Int       @id
  raceId       Int?
  driverId     Int?
  stop         Int?
  lap          Int?
  time         DateTime?
  duration     Float?
  milliseconds Int?
  createdAt    DateTime
  updatedAt    DateTime
  Drivers      Drivers?  @relation(fields: [driverId], references: [id])
  Races        Races?    @relation(fields: [raceId], references: [id])
}

model Qualifications {
  id            Int           @id
  raceId        Int?
  driverId      Int?
  constructorId Int?
  number        Int?
  position      Int?
  q1            DateTime?
  q2            DateTime?
  q3            DateTime?
  createdAt     DateTime
  updatedAt     DateTime
  Constructors  Constructors? @relation(fields: [constructorId], references: [id])
  Drivers       Drivers?      @relation(fields: [driverId], references: [id])
  Races         Races?        @relation(fields: [raceId], references: [id])
}

model RaceResults {
  id              Int           @id
  raceId          Int?
  driverId        Int?
  constructorId   Int?
  number          Int?
  grid            Int?
  position        Int?
  positionText    String?
  positionOrder   Int?
  points          Int?
  laps            Int?
  time            String?
  milliseconds    Int?
  fastestLap      Int?
  fastestLapRank  Int?
  fastestLapTime  DateTime?
  fastestLapSpeed Float?
  statusId        Int?
  createdAt       DateTime
  updatedAt       DateTime
  Constructors    Constructors? @relation(fields: [constructorId], references: [id])
  Drivers         Drivers?      @relation(fields: [driverId], references: [id])
  Races           Races?        @relation(fields: [raceId], references: [id])
  Statuses        Statuses?     @relation(fields: [statusId], references: [id])
}

model Races {
  id                   Int                    @id
  year                 Int?
  round                Int?
  circuitId            Int?
  name                 String?
  date                 DateTime?
  time                 DateTime?
  url                  String?
  createdAt            DateTime
  updatedAt            DateTime
  Races                Races?                 @relation("RacesToRaces_circuitId", fields: [circuitId], references: [id])
  ConstructorResults   ConstructorResults[]
  ConstructorStandings ConstructorStandings[]
  DriverStandings      DriverStandings[]
  LapTimes             LapTimes[]
  PitStops             PitStops[]
  Qualifications       Qualifications[]
  RaceResults          RaceResults[]
  other_Races          Races[]                @relation("RacesToRaces_circuitId")
}

model Seasons {
  id        Int      @id
  year      Int?
  url       String?
  createdAt DateTime
  updatedAt DateTime
}

model Statuses {
  id                 Int                  @id
  status             String?
  createdAt          DateTime
  updatedAt          DateTime
  ConstructorResults ConstructorResults[]
  RaceResults        RaceResults[]
}
